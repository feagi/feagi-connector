[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "rust_core_sensiomotor_functions_py"
version = "0.0.1"
description = "Python bindings for the rust_core_sensiomotor_functions library"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "Apache-2.0" }
authors = [
    { name = "Neuraville", email = "admin@feagi.org" }
]
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
]

[project.urls]
Repository = "https://github.com/feagi/feagi-connector"


[tool.maturin]
# Configures the build to create a Python module (not a binary)
module-name = "rust_core_sensiomotor_functions_py"
# Path to the Rust crate
manifest-path = "./rust_core_sensiomotor_functions_py/Cargo.toml"
# Include native libs in the wheel
#include = ["rust_core_sensiomotor_functions_py/py.typed"]
# These features will be enabled during build
features = []
# PyO3 binding features for Python versions
python-source = "python"
# Build for Python only
bindings = "pyo3"
# Python package data folder
python-packages = ["rust_core_sensiomotor_functions_py.py"]
# Add the appropriate trove classifiers
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython"
]

# Development dependencies - can be installed with pip install -e ".[dev]"
[project.optional-dependencies]
dev = [
    "maturin"==1.8.3,
]

[tool.isort]
profile = "black"

#[tool.mypy]
#python_version = "3.8"
#warn_return_any = true
#warn_unused_configs = true
#disallow_untyped_defs = true
#disallow_incomplete_defs = true

#[tool.pytest.ini_options]
#testpaths = ["tests"]
#python_files = "test_*.py"